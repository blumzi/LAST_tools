#!/bin/bash

#
# This script produces manages the two LAST pipeline services
# 

PROG="$(basename "${0}")"

. /etc/profile.d/last.sh

module_include lib/message

function usage() {
    cat <<- EOF

    Show usage:
        ${PROG} [-h|--help] 

    Get status:
        ${PROG} [[-H host] ... ] [status]

    Turn on/off for the current system boot session
        ${PROG} [[-H host] ... ] on|off

    Always run/do-not-run the pipeline (across system boots)
        ${PROG} [[-H host] ... ] always-on|always-off 

EOF
}


OPTS=$( getopt -o 'H:hun' --long "dry-run,help,host:,units,units-only" -n "${PROG}" -- "$@" )
eval set -- "${OPTS}"


units_only=false
     hosts=()
   dry_run=false

while true; do
    case "${1}" in
    -n|--dry-run)
        dry_run=true
        shift 1
        ;;

    -u|--units|--units-only)
        units_only=true
        shift 1
        ;;

    -h|--help)
        usage
        exit 0
        ;;

    -H|--host)
        hosts+=( ${2} )
        shift 2
        ;;


    --)
        shift 1
        break
        ;;
    esac
done

action="${1}"

if [ ! "${action}" ]; then
    action=status
fi


case "${action}" in
    status|on|off|always-on|always-off)
        ;;
    *)
        usage
        exit 1
        ;;
esac
        
cmd=""
case ${action} in
    status)
        cmd="last-pipeline-status"
        ;;
    on)
        cmd=$'\'systemctl --quiet start last-pipeline{1,2}\''
        ;;
    off)
        cmd=$'\'systemctl --quiet stop last-pipeline{1,2}\''
        ;;
    always-on)
        cmd=$'\'systemctl --quiet enable last-pipeline{1,2}; for id in [1..2]; do if ! systemctl --quiet is-active last-pipeline${id}; then systemctl -quiet start last-pipeline${id}; fi; done\''
        ;;
    always-off)
        cmd=$'\'systemctl --quiet disable last-pipeline{1,2}; for id in [1..2]; do if systemctl --quiet is-active last-pipeline${id}; then systemctl -quiet stop last-pipeline${id}; fi; done\''
        ;;
esac

if [ "${hosts[*]}" ]; then
    hosts_arg=""
    for host in ${hosts[*]}; do
        hosts_arg+=" -H ${host}"
    done
else
    hosts_arg="-u"
fi

if ${dry_run}; then
    echo last-asroot ${hosts_arg} --cmd $'${cmd}'
else
    last-asroot ${hosts_arg} --cmd $'${cmd}'
fi
