#!/bin/bash

PROG=$(basename ${0})
source /etc/profile.d/last.sh

module_include lib/const
module_include lib/backup

PROG=$(basename "${0}")
hostname="$(hostname -s)"
tops="/${hostname}/data[12]"

backup_set_target ${backup_default_target}

function usage() {
    cat <<- EOF

    The LAST pipeline generates products which need to be uploaded to WIS.  As soon as the pipeline 
     finishes working with a specific directory it adds a 'ready-for-transfer' event to the status-change
     file in that directory (a file named .status)

    This program runs periodically (cron !?!) and initiates transfers of products that have not been
     backed-up when they were produced (we had no link to WIS, etc.).

    This host:
        sources:      ${tops}

    Backup host:
        host:         ${backup_host}
        user:         ${backup_user}
        destination:  ${backup_topdir} 

EOF
}


if [ "${1}" = '-h' ] || [ "${1}" = "--help" ]; then
    usage
    exit 0
fi

export RSYNC_RSH="ssh -T -c aes128-ctr -o Compression=no -x"

while read -r path; do
    if [[ "${path}" != */.status ]]; then
        continue
    fi

    status_file=${path}
    dir=$(dirname ${status_file})
    if [[ "${dir}" == */raw ]]; then
	    continue
    fi

    if grep -qw ready-for-transfer "${status_file}" && ! grep -qw transfered "${status_file}"; then
        LAST_TOOL_QUIET=true last-backup --source=${src} --target=${backup_user}@${backup_host}:${backup_topdir}/${src}
    fi

done < <(find ${tops} -type f -name .status 2>/dev/null | sort -t/ --key=6n --key=8n)
