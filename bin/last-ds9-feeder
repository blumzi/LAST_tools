#!/bin/bash

source /etc/profile.d/last.sh
module_include lib/message
module_include lib/user

LAST_TOOL_PID=${$}  # for message_fatal

this_host=$(hostname -s)
this_side=${this_host:${#this_host}-1:1}
if [ ${this_side} = e ]; then
    peer_side=w
else
    peer_side=e
fi
peer_host=${this_host%${this_side}}${peer_side}
mount=${this_host#last}
mount=${mount%${this_side}}

north_top=/${this_host}/data1/archive/LAST.01.${mount}
south_top=/${this_host}/data2/archive/LAST.01.${mount}
if [ ${this_side} = e ]; then
    north_top+=.01  # ne
    south_top+=.02  # se
else
    north_top+=.04  # nw
    south_top+=.03  # sw
fi

tops=( ${north_top} ${south_top} )

function help() {
    {
        echo ""
        echo "This utility watches predefined directories for changed *.fits files and feeds them"
        echo " to ds9 viewers (if any are active)."
        echo ""
        echo "Usage: ${PROG} [-h|--help] [-v|--verbose]"
        echo ""
        echo "Watched directories:"
        echo ""
        printf "   %6s  %s\n" "Camera" "Directory"
        printf "   %6s  %s\n" "======" "========="
        for camera in north south; do
            camera_top=${camera}_top
            eval "top=${!camera_top}"
            printf "   %-6s  %s\n" "${camera}" "${top}"
        done
        echo ""
        echo "Flags:"
        echo " -h|--help:      Show this message and exit"
        echo " -v|--verbose:   Print file names as they are processed"
        echo ""
    } | sed 's;^;    ;'
}

function verbose() {
    local text="${*}"

    if ${verbose}; then
        echo "${PROG}: ${text}" >&2
    fi
}

function watcher() {
    local top="${1}"
    local path
    local camera_id=${top##*.}
    local frame_number invert

    case ${camera_id} in
        01|04) frame_number=1 ;;
        02|03) frame_number=2 ;;
    esac
    case ${camera_id} in
        01|02) invert="Y" ;;
        03|04) invert="X" ;;
    esac
    verbose "watching ${top} (camera: ${camera_id}, frame: ${frame_number}) ..."

    while read -r path; do
        if [[ "${path}" != *.fits ]]; then
            continue
        fi

        # shellcheck disable=SC2094
        while read ds9_name ds9_address; do
            verbose "feeding ${path} to frame=${frame_number} of ds9 ${ds9_address} ..."
            echo "frame ${frame_number}; file ${path}; zoom to fit; zscale; invert ${invert}" | xpaset ${ds9_address}
        done < <(xpaaccess -cv ${this_host})

    done < <(inotifywait --event close_write --monitor --recursive --format "%w%f" "${top}" 2>/dev/null)
}

PROG=$(basename "${0}")
OPTS=$( getopt -o 'hv' --long "help,verbose" -n "${PROG}" -- "$@" )
eval set -- "${OPTS}"

verbose=true
while true; do
    case "${1}" in

    -h|--help)
        help
        exit 0
        ;;

    -v|--verbose)
        verbose=true
        shift 1
        ;;

    --)
        shift 1
        break
        ;;
    esac
done
    
for top in ${tops[*]}; do
    mkdir -m 755 -p ${top}
    chown ${user_last}.${user_last} ${top}
    watcher ${top} &
done

wait