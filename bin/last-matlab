#!/bin/bash

#
# Run matlab with OCS-specific settings
#

PROG=$(basename ${0})
default_release=R2020b

if [ "${PROG}" = last-matlab ]; then
    requested_release=''
else
    requested_release="${PROG#last-matlab-}"
fi

if [ "${requested_release}" ]; then
    release=${requested_release}
else
    release=${default_release}
fi

function usage() {
    cat <<- EOF
        
    Runs matlab (${release}) in the current directory with some OCS-specific environment settings.

EOF
        while read -r line; do
            echo "        ${line}"
        done < <( diff --color=always ${tmp_before} ${tmp_after} )

        cat <<- EOF

    Usage:

        ${PROG} [[arg] ...]

EOF
}

tmp_before=$(mktemp)
tmp_after=$(mktemp)

env > ${tmp_before}
export LANG=en_US
export http_proxy=
export https_proxy=
env > ${tmp_after}

if [ "${1}" = -h ] || [ "${1}" = --help ]; then
    usage
    /bin/rm ${tmp_before} ${tmp_after}
    exit 0
fi
/bin/rm ${tmp_before} ${tmp_after}

source /etc/profile.d/last.sh

module_include lib/message

#
# Check if the tty lock files in /var/log are relevant, i.e. the processes that 
#  created them are still alive.
#
# If the creating process is not alive, we remove the file, otherwise we warn that they are in use.
#
# NOTE: This mechanism tries to prevent Matlab from dying when lock files linger around.
#        Should we only handle files that were created by Matlab (i.e. /proc/<pid>/cmdline contains 'matlab') ?!?
#
for file in $( find /var/lock/ -maxdepth 1 -name 'LCK..tty*' ); do
    read pid < ${file}
    if [ ! "${pid}" ]; then
        continue
    fi

    if [ ! -d /proc/${pid} ]; then
        message_info "Removing lock file \"${file}\" (no such process id: ${pid})"
        /bin/rm -f ${file}
    else
        cmd=( "$(tr '\0' ' ' < /proc/${pid}/cmdline)" )
        if [[ "${cmd[0]}" == /* ]]; then
            cmd[0]=".../$(basename ${cmd[0]})"
        fi
        message_warning "Lock file \"${file}\" is held by process ${pid} (${cmd[*]}), cannot remove it!"
    fi
done

matlab=matlab
if [ "${requested_release}" ]; then
    matlab+="-${requested_release}"
fi

if ! command -v ${matlab} >/dev/null; then
    msg="Missing command \"${matlab}\"."
    dir=/usr/local/MATLAB/${release}
    if [ -x "${dir}" ]; then
        msg+=" Directory \"${dir}\" exists though."
    else
        msg+=" Missing directory \"${dir}\"."
    fi
    message_failure "${msg}"
    exit 1
fi

${matlab} "${@}"
